---------------- IMPORTANCE SAMPLING -----------------

Testing importance sampling for extensions projects
Very minimal implementation: quickly done, minimal changes to cosmosis code, not robust.

Try 'grep -R otavio' to see the modifications

-------------------- HOW TO USE -----------------------

1. Look into ./code directory and replace the modified files into cosmosis (pipeline.py and 2pt_like.py)

2. Run your favorite sampler with
   
   extra_output = ...  data_vector/2pt_theory#457

   where #457 indicates the size of your scale cut datavector.

3. Run './values_importance.sh 457' (where 457 indicates the size of the datavector) to generate
   values_importance.ini file

4. Setup params_importance.ini. Make sure cosmosis reads values_importance.ini
   generated by values_importance.sh (and also your traditional ini file)

5. Run cosmosis params_importance.ini (the new output still includes the datavector)

------------------ MODIFICATIONS ---------------------

1. Modified pipeline.py to allow extra_output to handle numpy.ndarrays.

   But (for now) we should know beforehand the size of the datavector
   (e.g. 457), so, the notation is:

   extra_output = data_vector/2pt_theory#457 ...

       This in Brazil would be called "gambiarra". Possible translations
       according to a dictionary are: McGyverism, workaround, alternative
       engineering.

2. In 2pt_like.py's function extract_theory_points(): if it finds
   data_vector--2pt_theory_i values in the datablock, uses it. 

3. So, we should have a values_importance.ini file including all
   data_vector--2pt_theory_i as varied parameters, for the importance
   sampler load them (a bash script generates this file).
