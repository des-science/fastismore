---------------- IMPORTANCE SAMPLING -----------------

Testing importance sampling for extensions projects
Very minimal implementation: quickly done, minimal changes to cosmosis code.

-------------------- HOW TO USE -----------------------

1. Look into ./code directory and replace the modified files into cosmosis

2. Run your favorite sampler with
   
   extra_output = ...  data_vector/2pt_theory#457

   where #457 indicates the size of your scale cut datavector.

       Multinest: if you want to save only points with a minimum
       weight, define min_weight in the [multinest] section of your
       params.ini file.

3. Run calc_likelihoods.py to compute log-likes for the new data vector

4. Plot results using plot_importance.py or your favorite script
   Importance weights are exp(new_log_post - old_log_post)

       Multinest: don't forget to multiply by Multinest's weights

------------------ MODIFICATIONS ---------------------

1. Modified pipeline.py to allow extra_output to handle numpy.ndarrays.

   But (for now) we should know beforehand the size of the datavector
   (e.g. 457), so, the notation is:

   extra_output = data_vector/2pt_theory#457 ...

2. Modified multinest_sampler.py. If you want to save only points with a minimum
   weight value, use min_weight parameter in [multinest] section.
